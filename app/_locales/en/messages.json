{
	"appName": {
		"message": "onhello",
		"description": "The name of the application."
	},
	"appShortName": {
		"message": "onhello",
		"description": "The short_name (maximum of 12 characters recommended) is a short version of the app's name"
	},
	"appDescription": {
		"message": "Automatically reply to messages in Teams.",
		"description": "The description of the application"
	},
	"browserActionTitle": {
		"message": "onhello",
		"description": "The title of the browser action button"
	},
	"optionsPageTitle": {
		"message": "‚öôÔ∏è Options"
	},
	"themeSectionTitle": {
		"message": "üé® Theme"
	},
	"themePreferenceDescription": {
		"message": "Changing the theme will not effect this page until you reload the page."
	},
	"rulesSectionTitle": {
		"message": "ü§ñ Rules"
	},
	"rulesInstructions": {
		"message": "Set up some rules for how to respond to messages. Make sure to click SAVE RULES below when you are done. You can match a message exactly or set up patterns (JavaScript regular expressions) to match more messages."
	},
	"rulesResponsesInstructions": {
		"message": "List a few possible responses and one will be randomly selected when making a reply. You can use HTML and some placeholders in the responses. The supported placeholders are: {{ FROM }} for the full name of the sender, {{ FROM_FIRST_NAME }} for just the first name (any characters before the first space in FROM) of the sender."
	},
	"rulesRawInstructions": {
		"message": "Below is a raw view of your rules. Use \"messageExactMatch\" to match a message exactly or \"messagePattern\" when you want to use patterns (JavaScript regular expressions can be used). Set your reply options in \"responses\", one will be picked randomly. "
	},
	"saveInstructions": {
		"message": "After saving, you must refresh the tab of your chat application for the changes to take effect."
	},
	"saveRules": {
		"message": "Save Rules"
	},
	"advancedSectionTitle": {
		"message": "ü§ì Advanced"
	},
	"advancedInfo": {
		"message": "Looking for more customization? You can define some methods in your browser's Console or any other clever way you can think of: `window._onhelloGetResponse(from: string, messageText: string, rules: Rule[]): {text: string, messageType: 'Text' | 'RichText/Html'}` to build a response to a message or `window._onhelloHandleResponse(url: string, responseBody: any, requestHeaders: any, settings: Rules): Promise<void>` to directly handle a response to a web request. You will still need a list of \"apps\" defined in your rules."
	}
}